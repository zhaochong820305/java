1、上传文件使用二进制协议 
2、一个线程可以支持多个并发连接 
3、使用jar打包发布并编写启动shell脚本
4、服务端以后台方式运行，7*24小时不判断运行
5、要做压力测试，保证性能 
6、代码要整洁规范，风格一致
7、支持命令行参数


//////////////////////////////////////////////////////////////
binary_demo功能演示

示例代码演示了java使用二进制协议进行文件传输的功能。

编译方法：
make

server运行方法：
make run_server

client运行方法：
make run_client


目录说明：
test 目录是上要上传的文件，本例为a.txt
upload 为目标目录，server将客户端上传的文件存储在 upload 目录下


关于打包：
执行make命令时，将protocol和util打包成jar文件


运行环境：
linux

其它：
示例代码没有演示守护进程
没有进行压力测试
代码中很多调试用的System.out.println语句,做压力测试时需要注释掉
演示了基本的命令行参数
代码风格比较统一
